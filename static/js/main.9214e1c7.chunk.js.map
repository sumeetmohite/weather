{"version":3,"sources":["api/fetchWeather.js","components/FirstRow/FirstRow.js","components/SecondRow/SecondRow.js","components/LeftColumn/LeftColumn.js","components/Chart/LineChart.js","components/ThirdRow/ThirdRow.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","process","data","FirstRow","search","setQuery","className","type","placeholder","value","onChange","e","target","onKeyPress","style","color","SecondRow","weather","fiveDays","date","fiveDates","list","i","length","push","moment","unix","dt","format","fontSize","city","name","map","index","lineHeight","background","borderRadius","padding","textAlign","boxShadow","width","src","icon","alt","description","height","Math","round","main","temp","LeftColumn","display","size","id","marginTop","defaults","font","family","LineChart","options","ThirdRow","useState","setValue","labels","datasets","label","fill","backgroundColor","borderColor","borderWidth","floor","console","log","onClick","scales","yAxes","ticks","beginAtZero","elements","point","radius","hoverRadius","plugins","legend","weight","responsive","maintainAspectRatio","App","setWeather","setCardBg","key","motion","div","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9214e1c7.chunk.js","sourcesContent":["import axios from 'axios';\n\n// const URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst URL = 'https://api.openweathermap.org/data/2.5/forecast';\nconst WEATHER_API_KEY = process.env.REACT_APP_WEATHER_API;\n\nexport const fetchWeather = async(query) => {\n    const { data } = await axios.get(URL, {\n        params: {\n            q: query,\n            units: 'metric',\n            APPID: WEATHER_API_KEY,\n        }\n    });\n    return data;\n}","import { FaSearch } from 'react-icons/fa';\nconst FirstRow = ({query,search,setQuery}) => {\n  return (\n    <div className='first-row'>\n      <div>       \n        <input type='text' className='search' \n        placeholder='Search city'  \n        value={query} \n        onChange={(e) => setQuery(e.target.value)} \n        onKeyPress={search} />\n        {/* <FaSearch className=\"search-icon\"/> */}\n\n        <h2 style={{color:'#514e4d'}}><strong>Weather Forecast</strong></h2>\n      </div>\n    </div>\n  )\n}\n\nexport default FirstRow\n","import Weather from \"../Weather/Weather\"\nimport Loader from \"react-loader-spinner\";\nimport moment from 'moment';\n\nconst SecondRow = ({weather,date}) => {\n  const fiveDays = [];\n  const fiveDates = [];\n  if(weather.list){\n    for(let i=0; i<weather.list.length; i++){\n      if((i+1)%8===0){\n        fiveDays.push(weather.list[i]);\n        let date = moment.unix(weather.list[i].dt).format(\"ddd, hA\");\n        fiveDates.push(date);\n      }  \n    }\n  }\n  return (\n    <div className='second-row'>\n      {/* {weather.main && <Weather date={date} weather={weather}/>} */}\n      {weather.list && (\n        <h4 style={{fontSize:'1.2rem',color:'#514e4d'}}>{weather.city.name}</h4>\n      )}\n        <div className=\"second-row-data\">\n        {weather.list && (\n          fiveDays.map((e,index) =>\n          (\n            <div key={index} style={{lineHeight:'0.25',background: '#ffffff', borderRadius:'1rem', padding:'0 0.5rem', textAlign: 'center', boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',width:'14%'}}>\n              <p>{fiveDates[index]}</p>\n              <img className='city-icon' src={`https://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png`} alt={e.weather[0].description} style={{height:'3rem',width:'3rem',}}/>\n              <p><strong>{Math.round(e.main.temp)}<sup>&deg;</sup>C</strong></p>\n              <p >{e.weather[0].main}</p>\n            </div>\n          \n          )\n          ))}\n        </div>\n    </div>\n  )\n}\n\nexport default SecondRow\n","import { FaHome, FaMapMarkerAlt, FaCloudSunRain } from 'react-icons/fa';\nimport { IoSettingsSharp } from 'react-icons/io5';\nimport { GoGraph } from 'react-icons/go';\nconst LeftColumn = () => {\n  return (\n    <div className=\"left-sidebar\">\n      <div style={{textAlign:'center'}}>\n        <p style={{fontSize:'1.25rem', color:'white', display:'inline-flex'}}><FaCloudSunRain size={30} color=\"#f7d042\"className=\"lefticons\"/><strong>RyderWeather</strong></p>\n      </div>\n      <div id=\"toggle-options\" style={{marginTop:'2rem'}}>\n        <div className=\"toggle\"><FaHome size={20} className=\"lefticons\"/>Dashboard</div>\n        <div className=\"toggle\"><GoGraph size={20} className=\"lefticons\"/>Statistics</div>\n        <div className=\"toggle\"><FaMapMarkerAlt size={20} className=\"lefticons\"/>Map</div>\n        <div className=\"toggle\"><IoSettingsSharp size={20} className=\"lefticons\"/>Settings</div>\n      </div>\n      <div id=\"left-bottom\">\n        <div id=\"default-weather-card\">\n          \n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LeftColumn\n","import React from 'react';\nimport { Line, defaults } from 'react-chartjs-2';\n\ndefaults.font.family = 'Manrope';\n\nconst LineChart = ({data,options}) => (\n  <>\n    <div className='header'>\n      <div className='links'>\n      </div>\n    </div>\n    <Line data={data} options={options} height={50} />\n  </>\n);\n\nexport default LineChart;","import LineChart from \"../Chart/LineChart\"\nimport moment from 'moment';\nimport {useState} from 'react';\n\nconst ThirdRow = ({weather}) => {\n  const[value,setValue] = useState(5)\n  let data = {\n    labels: [],\n    datasets: [\n      {\n        label: 'Weather in Â°C ',\n        data: [],\n        fill: false,\n        backgroundColor: 'yellowgreen',\n        borderColor: '#6769DC',\n        borderWidth: 2,\n        height:20,\n      },\n    ],\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n    elements:{\n      point:{\n        radius:7,\n        hoverRadius:10\n      }\n    },\n    plugins: {\n            legend: {\n                labels: {\n                    // This more specific font property overrides the global property\n                    font: {\n                        size: 14,\n                        weight: 'bold'\n                    }\n                }\n            },\n        },\n        height:400,\n        responsive: true,\n        maintainAspectRatio: true,\n  };\n\n  if(weather.list){\n    if(value===1){\n      for(let i=0; i<10; i++){\n        let date = moment.unix(weather.list[i].dt).format(\"ddd, hA\");\n        data.labels.push(date);\n        //console.log(Math.floor(weather.list[i].main.temp))\n        data.datasets[0].data.push(Math.floor(weather.list[i].main.temp))\n      }\n    }else if(value===5){\n      for(let i=0; i<weather.list.length; i++){\n      if((i+1)%value===0){\n        let date = moment.unix(weather.list[i].dt).format(\"ddd, hA\");\n        data.labels.push(date);\n        //console.log(Math.floor(weather.list[i].main.temp))\n        data.datasets[0].data.push(Math.floor(weather.list[i].main.temp))\n        //fiveDates.push(date);\n      }  \n    }\n    }\n    \n  }\n  console.log(data.datasets[0].data)\n  \n  return (\n    <div className='third-row'>\n      <h3 style={{fontSize:'1.2rem', color:'#514e4d'}}>Weather Graph</h3>\n      <div className='graph-container'>\n        <div id=\"graph-buttons\">\n          <button className='graph-selector' onClick={()=>setValue(1)}>Day</button>\n          <button className='graph-selector' onClick={()=>setValue(5)}>Week</button>\n        </div>\n        \n        <LineChart data={data} options={options}/>\n\n      </div>\n    </div>\n  )\n}\n\nexport default ThirdRow\n","import React, {useState} from 'react';\nimport {motion} from 'framer-motion';\nimport './App.css';\nimport {fetchWeather} from './api/fetchWeather';\nimport FirstRow from './components/FirstRow/FirstRow';\nimport SecondRow from './components/SecondRow/SecondRow';\nimport LeftColumn from './components/LeftColumn/LeftColumn';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport ThirdRow from './components/ThirdRow/ThirdRow';\n\nconst App = () => {\n\nconst[query, setQuery] = useState('');\nconst[weather, setWeather] = useState('');\nconst[cardBg, setCardBg] = useState('');\n\nconst search = async(e) => {\n    if(e.key === 'Enter'){\n        const data = await fetchWeather(query);\n        setWeather(data);\n        console.log(data);\n\n        // let now = moment(data.list[0].dt*1000).format('MMMM Do YYYY, h:mm a');\n        // setDate(now)\n\n        if(data.list[0].weather[0].main == 'Clear'){\n            setCardBg('linear-gradient(to right, #2980b9, #6dd5fa, #ffffff)')\n        }\n        if(data.list[0].weather[0].main == 'Thunderstorm'){\n            setCardBg('linear-gradient(to right, #659999, #f4791f)')\n        }\n        if(data.list[0].weather[0].main == 'Drizzle'){\n            setCardBg('linear-gradient(to right, #2c3e50, #3498db)')\n        }\n        if(data.list[0].weather[0].main == 'Rain'){\n            setCardBg('linear-gradient(to right, #1a2980, #26d0ce)')\n        }\n        if(data.list[0].weather[0].main == 'Snow'){\n            setCardBg('linear-gradient(to right, #403b4a, #e7e9bb)')\n        }\n        if(data.list[0].weather[0].main == 'Clouds'){\n            setCardBg('linear-gradient(to right, #bdc3c7, #2c3e50)')\n        }\n        \n        setQuery('');\n    }\n}\n\nreturn (\n    <motion.div className='main-container'>\n      <div className=\"app-container\">\n        <LeftColumn/>\n        <div className=\"right-column\">\n          <div className=\"widget-container\">\n            <FirstRow query={query} search={search} setQuery={setQuery} />\n            <SecondRow weather={weather}/>\n            <ThirdRow weather={weather}/></div> \n        </div>\n      </div>\n    </motion.div>\n)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}