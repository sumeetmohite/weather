{"version":3,"sources":["api/fetchWeather.js","components/FirstRow/FirstRow.js","components/Weather/Weather.js","components/SecondRow/SecondRow.js","components/LeftColumn/LeftColumn.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","process","data","FirstRow","search","setQuery","className","type","placeholder","value","onChange","e","target","onKeyPress","Weather","date","weather","motion","div","animate","rotateZ","name","sys","country","Math","round","main","temp","src","icon","alt","description","style","fontSize","feels_like","wind","speed","SecondRow","LeftColumn","size","cursor","App","useState","setWeather","setDate","setCardBg","key","console","log","now","moment","dt","format","time","Date","getHours","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.408772af.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = process.env.REACT_APP_WEATHER_API;\n\nexport const fetchWeather = async(query) => {\n    const { data } = await axios.get(URL, {\n        params: {\n            q: query,\n            units: 'metric',\n            APPID: API_KEY,\n        }\n    });\n    return data;\n}","import { FaSearch } from 'react-icons/fa';\nconst FirstRow = ({query,search,setQuery}) => {\n  return (\n    <div className='first-row'>\n      <h2>Good Afternoon , </h2>\n      <div className=\"input-wrapper\">\n        <input type='text' className='search' \n        placeholder='Search city'  \n        value={query} \n        onChange={(e) => setQuery(e.target.value)} \n        onKeyPress={search} />\n        {/* <FaSearch className=\"search-icon\"/> */}\n      </div>\n    </div>\n  )\n}\n\nexport default FirstRow\n","import {motion} from 'framer-motion';\n\nconst Weather = ({date,weather}) => {\n  return (\n    <motion.div className='city' animate={{rotateZ:360 }}>\n                   <p>{date}</p>\n                   <h2 className='city-name'>\n                       <span><strong>{weather.name}</strong></span>\n                       <sup>{weather.sys.country}</sup>\n                   </h2>\n                    <div className='city-temp'>\n                        {Math.round(weather.main.temp)}\n                        <sup>&deg;C</sup>\n                    </div>\n                    <div className='info'>\n                        <img className='city-icon' src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description}/>\n                        <p style={{fontSize:\"1.5rem\"}}>{weather.weather[0].description}</p>\n                    </div>\n                    <div className='bottom-row'>\n                        <div className='bottom-column'>\n                            <p>Feels</p>\n                            <p>{Math.round(weather.main.feels_like)}&deg;C</p> \n                        </div>\n                        <div className='bottom-column'>\n                            <p>Wind</p>\n                            <p>{Math.round((weather.wind.speed)*(18/5))} km/h</p>\n                        </div>\n                    </div>\n\n               </motion.div>\n  )\n}\n\nexport default Weather\n","import Weather from \"../Weather/Weather\"\nimport Loader from \"react-loader-spinner\";\n\nconst SecondRow = ({weather,date}) => {\n  return (\n    <div className='second-row'>\n      {weather.main && <Weather date={date} weather={weather}/>}\n    </div>\n  )\n}\n\nexport default SecondRow\n","import { RiHomeLine, RiSettings4Line } from 'react-icons/ri'\nimport { VscGraphLine } from 'react-icons/vsc'\nconst LeftColumn = () => {\n  return (\n    <div className=\"left-sidebar\">\n      <RiHomeLine size={25} cursor='pointer'/>\n      <VscGraphLine size={22} cursor='pointer'/>\n      <RiSettings4Line size={27} cursor='pointer'/>\n    </div>\n  )\n}\n\nexport default LeftColumn\n","import React, {useState} from 'react';\nimport {motion} from 'framer-motion';\nimport './App.css';\nimport {fetchWeather} from './api/fetchWeather';\nimport moment from 'moment';\nimport FirstRow from './components/FirstRow/FirstRow';\nimport SecondRow from './components/SecondRow/SecondRow';\nimport LeftColumn from './components/LeftColumn/LeftColumn';\nimport RightColumn from './components/RightColumn/RightColumn';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst App = () => {\n\nconst[query, setQuery] = useState('');\nconst[weather, setWeather] = useState('');\nconst[date, setDate] = useState('');\nconst[cardBg, setCardBg] = useState('');\n\nconst search = async(e) => {\n    if(e.key === 'Enter'){\n        const data = await fetchWeather(query);\n        setWeather(data);\n        console.log(data);\n\n        let now = moment(data.dt*1000).format('MMMM Do YYYY, h:mm a');\n        setDate(now)\n        let time = new Date(data.dt*1000)\n        time = time.getHours();\n        console.log(time)\n\n        if(data.weather[0].main == 'Clear'){\n            setCardBg('linear-gradient(to right, #2980b9, #6dd5fa, #ffffff)')\n        }\n        if(data.weather[0].main == 'Thunderstorm'){\n            setCardBg('linear-gradient(to right, #659999, #f4791f)')\n        }\n        if(data.weather[0].main == 'Drizzle'){\n            setCardBg('linear-gradient(to right, #2c3e50, #3498db)')\n        }\n        if(data.weather[0].main == 'Rain'){\n            setCardBg('linear-gradient(to right, #1a2980, #26d0ce)')\n        }\n        if(data.weather[0].main == 'Snow'){\n            setCardBg('linear-gradient(to right, #403b4a, #e7e9bb)')\n        }\n        if(data.weather[0].main == 'Clouds'){\n            setCardBg('linear-gradient(to right, #bdc3c7, #2c3e50)')\n        }\n        \n        setQuery('');\n    }\n}\n\nreturn (\n    <motion.div className='main-container'>\n        <div className=\"app-container\">\n            <LeftColumn/>\n            <div className=\"widget-container\" >\n                <FirstRow query={query} search={search} setQuery={setQuery} />\n                <SecondRow weather={weather} date={date}/>\n            </div>\n            {/* <RightColumn weather={weather} date={date}  /> */}\n            </div>\n    </motion.div>\n)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}