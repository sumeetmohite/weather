{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","image","setImage","setQuery","weather","setWeather","search","e","key","console","log","main","className","style","backgroundImage","type","placeholder","value","onChange","target","onKeyPress","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"gOAKaA,EAAY,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACDC,IAAMC,IAJrB,kDAI8B,CAClCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MAPI,sCAEY,uBAChBC,EADgB,EAChBA,KADgB,kBAQjBA,GARiB,2CAAH,sD,OC2DVC,EA5DH,WAAO,IAAD,EAEWC,mBAAS,mHAFpB,mBAERC,EAFQ,KAEDC,EAFC,OAIWF,mBAAS,IAJpB,mBAIRV,EAJQ,KAIDa,EAJC,OAKeH,mBAAS,IALxB,mBAKRI,EALQ,KAKCC,EALD,KAORC,EAAM,uCAAG,WAAMC,GAAN,eAAAhB,EAAA,yDACE,UAAVgB,EAAEC,IADM,iCAEYnB,EAAaC,GAFzB,OAEDQ,EAFC,OAGPO,EAAWP,GACXW,QAAQC,IAAIZ,GACe,SAAxBA,EAAKM,QAAQ,GAAGO,MACfT,EAAS,oKAEc,gBAAxBJ,EAAKM,QAAQ,GAAGO,MACfT,EAAS,oKAEc,WAAxBJ,EAAKM,QAAQ,GAAGO,MACfT,EAAS,iKAEc,QAAxBJ,EAAKM,QAAQ,GAAGO,MACfT,EAAS,oKAEc,QAAxBJ,EAAKM,QAAQ,GAAGO,MACfT,EAAS,oKAEc,UAAxBJ,EAAKM,QAAQ,GAAGO,MACfT,EAAS,mKAGbC,EAAS,IAxBF,4CAAH,sDA4BZ,OACI,sBAAKS,UAAU,iBAAiBC,MAAO,CAACC,gBAAgB,OAAD,OAAQb,EAAR,MAAvD,UACI,uBAAOc,KAAK,OAAOH,UAAU,SAASI,YAAY,iBAAiBC,MAAO3B,EAAO4B,SAAU,SAACX,GAAD,OAAOJ,EAASI,EAAEY,OAAOF,QAAQG,WAAYd,IACvIF,EAAQO,MACN,sBAAKC,UAAU,OAAf,UACI,qBAAIA,UAAU,YAAd,UACI,+BAAOR,EAAQiB,OACf,8BAAMjB,EAAQkB,IAAIC,aAErB,sBAAKX,UAAU,YAAf,UACKY,KAAKC,MAAMrB,EAAQO,KAAKe,MACzB,2CAEJ,sBAAKd,UAAU,OAAf,UACI,qBAAKA,UAAU,YAAYe,IAAG,4CAAuCvB,EAAQA,QAAQ,GAAGwB,KAA1D,WAAyEC,IAAKzB,EAAQA,QAAQ,GAAG0B,cAC/H,4BAAI1B,EAAQA,QAAQ,GAAG0B,wBClD/CC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.1efe3ece.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\n\nexport const fetchWeather = async(query) => {\n    const { data } = await axios.get(URL, {\n        params: {\n            q: query,\n            units: 'metric',\n            APPID: API_KEY,\n        }\n    });\n    return data;\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {fetchWeather} from './api/fetchWeather';\n\nconst App = () => {\n\n    const[image, setImage] = useState(\"https://images.pexels.com/photos/1486974/pexels-photo-1486974.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\");\n\n    const[query, setQuery] = useState('');\n    const[weather, setWeather] = useState('');\n\n    const search = async(e) => {\n        if(e.key === 'Enter'){\n            const data = await fetchWeather(query);\n            setWeather(data);\n            console.log(data);\n            if(data.weather[0].main == 'Clear'){\n                setImage(\"https://images.unsplash.com/photo-1523913950023-c47b5ae5b164?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1267&q=80\")\n            }\n            if(data.weather[0].main == 'Thunderstorm'){\n                setImage(\"https://images.unsplash.com/photo-1529220100082-80957b04a221?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1301&q=80\");\n            }\n            if(data.weather[0].main == 'Drizzle'){\n                setImage(\"https://images.unsplash.com/photo-1556485689-33e55ab56127?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\");\n            }\n            if(data.weather[0].main == 'Rain'){\n                setImage(\"https://images.unsplash.com/photo-1496034663057-6245f11be793?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80\");\n            }\n            if(data.weather[0].main == 'Snow'){\n                setImage(\"https://images.unsplash.com/photo-1491002052546-bf38f186af56?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1383&q=80\");\n            }\n            if(data.weather[0].main == 'Clouds'){\n                setImage(\"https://images.unsplash.com/photo-1532939198640-a7f0da02b62f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\");\n            }\n            \n            setQuery('');\n        }\n    }\n    \n    return (\n        <div className='main-container' style={{backgroundImage:`url(${image})`}}>\n            <input type='text' className='search' placeholder='Search city...' value={query} onChange={(e) => setQuery(e.target.value)} onKeyPress={search} />\n           { weather.main && (\n               <div className='city'>\n                   <h2 className='city-name'>\n                       <span>{weather.name}</span>\n                       <sup>{weather.sys.country}</sup>\n                   </h2>\n                    <div className='city-temp'>\n                        {Math.round(weather.main.temp)}\n                        <sup>&deg;C</sup>\n                    </div>\n                    <div className='info'>\n                        <img className='city-icon' src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description}/>\n                        <p>{weather.weather[0].description}</p>\n                    </div>\n\n               </div>\n           )\n           }\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}